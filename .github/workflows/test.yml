name: Clean Old CloudFlare Pages Deployments

on:
  workflow_dispatch:
    inputs:
      manual_trigger:
        description: 'Trigger the workflow manually'
        default: 'true'

jobs:
  delete-old-deployments:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Call Cloudflare Pages API
        run: |
          # All Constants
          CF_ACCOUNT_ID=${{ env.CF_ACCOUNT_ID }}
          CF_PROJECT_NAME=${{ env.CF_PROJECT_NAME }}
          CF_API_TOKEN=${{ secrets.CF_API_TOKEN }}
          CF_EXPIRATION_DAYS=${{ env.CF_EXPIRATION_DAYS }}

          # Set endpoint to get all deployments.
          ENDPOINT="https://api.cloudflare.com/client/v4/accounts/$CF_ACCOUNT_ID/pages/projects/$CF_PROJECT_NAME/deployments"
          
          # Get total pages.
          totalPages=$(($(curl -s -X GET "$ENDPOINT?page=1" -H "Authorization: Bearer $CF_API_TOKEN" | jq -r '.result_info.total_count') / 25))
          
          # Paginate through deployments. [25 deployments per page]
          for ((page = 1; page <= totalPages; page++)); do
          
            # Get deployments.
            response=$(curl -s -X GET "$ENDPOINT?page=$page" -H "Authorization: Bearer $CF_API_TOKEN")
          
            # Get cutoff date.
            cutoffDate=$(($(date +%s) - (CF_EXPIRATION_DAYS * 60)))
          
            # Loop through deployments and delete if older than cutoff-days and has a non-empty alias.
            echo "$response" | jq -c '.result[]' | while read -r obj; do
              # Get deployment time.
              currentDeploymentTime=$(date -u -d "$(echo "$obj" | jq -r '.created_on')" +%s)
          
              # Get deployment alias [Will be null if not latest deployment].
              currentDeploymentAlias=$(echo "$obj" | jq -r '.aliases[0]')
          
              # Check if deployment is older than cutoff-days and has an empty alias.
              if [ "$currentDeploymentTime" -lt "$cutoffDate" ] && [ "$currentDeploymentAlias" == "null" ]; then
                deploymentId=$(echo "$obj" | jq -r '.id')
                echo "$deploymentId"
              fi
            done
          done
